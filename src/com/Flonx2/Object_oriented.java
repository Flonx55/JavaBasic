package com.Flonx2;

/**
 * @Auther:Flonx
 * @Date:2020/12/29 - 12 - 29 - 7:19
 * @Description: com.Flonx2
 * @Version: 1.0
 */
public class Object_oriented {
    public static void main(String[] args) {
        //面向过程:当事件比较简单的时候,,利用面向过程,注重的是事件的具体的步骤/过程,注重的是过程中的具体的行为,以函数为最小单位
        //考虑怎么做
        //面向对象:注重找参与者,将功能封装进对象,强调具备了功能的对象,以类/对象为最小单位,考虑谁来做
        //二者相辅相成,并不是独立的,解决复杂问题,通过面向对象方式便于我们从宏观上把握事物之间复杂的关系,方便我们分析整个系统,具体
        //到微观操作,仍然使用面向过程方式来处理
        //面向对象:执行者----->指挥者

        //案例:人把大象装进冰箱
        //面向过程:函数1,打开冰箱(){人站在冰箱前,打开冰箱,冰箱开到30°的时候,冰箱的灯打开了}
        //函数2:存储大象(){大象先迈左腿,再迈右腿,考虑冰箱能不能装下}
        //函数3:关闭冰箱(){人站在冰箱前,关闭冰箱,冰箱开到30°角的时候,冰箱的灯关闭了}

        //面向对象:
        //人{打开(冰箱){
        //      冰箱.打开()}
        //    存储(大象){大象.进入()}
        //    关闭(冰箱){冰箱.关闭()}
        // }
        //冰箱{打开(){}
        //        关闭(){}
        // }
        //大象{
        // 进入(冰箱){}
        // }



    }
}
